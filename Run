#!/bin/bash

# Colors for UI
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Animation characters
ANIM_CHARS=("⣾" "⣽" "⣻" "⢿" "⡿" "⣟" "⣯" "⣷")

# Function to display animated loading
loading_animation() {
    local pid=$1
    local text=$2
    local count=0
    
    while kill -0 $pid 2>/dev/null; do
        local anim_char=${ANIM_CHARS[$((count % ${#ANIM_CHARS[@]}))]}
        local progress=$(( (count * 5) % 100 ))
        
        if [ $progress -eq 0 ] && [ $count -ne 0 ]; then
            progress=100
        fi
        
        echo -ne "\r${CYAN}[${anim_char}]${NC} ${text}... ${YELLOW}${progress}%${NC}"
        sleep 0.1
        ((count++))
    done
    
    echo -ne "\r${GREEN}[✓]${NC} ${text}... ${GREEN}100%${NC} Completed!"
    echo
}

# Function to validate wallet address
validate_wallet() {
    local wallet=$1
    if [[ ${#wallet} -ne 34 ]]; then
        return 1
    fi
    return 0
}

# Function to display banner
show_banner() {
    clear
    echo -e "${PURPLE}"
    echo "╔══════════════════════════════════════════════════════════╗"
    echo "║                 VERUS COIN MINER                        ║"
    echo "║               Auto Configuration Tool                   ║"
    echo "║                 with Cloud CPU Support                  ║"
    echo "╚══════════════════════════════════════════════════════════╝"
    echo -e "${NC}"
}

# Function to select country
select_country() {
    show_banner
    echo -e "${CYAN}Select Mining Pool Country:${NC}"
    echo -e "${YELLOW}1. Singapore (sg.vipor.net:5040)${NC}"
    echo -e "${YELLOW}2. Europe (eu.vipor.net:5040)${NC}"
    echo -e "${YELLOW}3. North America (na.vipor.net:5040)${NC}"
    echo -e "${YELLOW}4. Australia (au.vipor.net:5040)${NC}"
    echo -e "${YELLOW}5. Japan (jp.vipor.net:5040)${NC}"
    echo -e "${YELLOW}6. Custom Pool${NC}"
    echo
    
    read -p "Enter your choice (1-6): " country_choice
    
    case $country_choice in
        1)
            POOL="sg.vipor.net:5040"
            COUNTRY="Singapore"
            ;;
        2)
            POOL="eu.vipor.net:5040"
            COUNTRY="Europe"
            ;;
        3)
            POOL="na.vipor.net:5040"
            COUNTRY="North America"
            ;;
        4)
            POOL="au.vipor.net:5040"
            COUNTRY="Australia"
            ;;
        5)
            POOL="jp.vipor.net:5040"
            COUNTRY="Japan"
            ;;
        6)
            read -p "Enter custom pool (host:port): " custom_pool
            POOL=$custom_pool
            COUNTRY="Custom"
            ;;
        *)
            echo -e "${RED}Invalid choice! Using Singapore pool.${NC}"
            POOL="sg.vipor.net:5040"
            COUNTRY="Singapore"
            ;;
    esac
}

# Function to get wallet address
get_wallet() {
    while true; do
        read -p "Enter your Verus wallet address (34 characters): " WALLET
        
        if validate_wallet "$WALLET"; then
            break
        else
            echo -e "${RED}Invalid wallet address! Must be exactly 34 characters.${NC}"
        fi
    done
}

# Function to configure miner
configure_miner() {
    show_banner
    echo -e "${BLUE}Configuring Verus Miner...${NC}"
    
    # Check if ccminer exists
    if [ ! -f "./ccminer" ]; then
        echo -e "${RED}Error: ccminer not found in current directory!${NC}"
        exit 1
    fi
    
    # Make ccminer executable
    chmod +x ./ccminer
    
    # Create miner configuration
    cat > miner_config.sh << EOF
#!/bin/bash
# Verus Miner Configuration
# Auto-generated by Verus Miner Tool

POOL="$POOL"
WALLET="$WALLET"
WORKER_NAME="cloud_miner"
THREADS=50
INTENSITY=20

echo "Starting Verus Miner with following configuration:"
echo "Pool: \$POOL"
echo "Wallet: \$WALLET"
echo "Threads: \$THREADS"
echo "Country: $COUNTRY"

./ccminer -a verus -o stratum+tcp://\$POOL -u \$WALLET.\$WORKER_NAME -p x -t \$THREADS --cpu-priority=5
EOF
    
    chmod +x miner_config.sh
}

# Function to start mining
start_mining() {
    show_banner
    echo -e "${GREEN}Starting Verus Miner...${NC}"
    echo -e "${CYAN}Configuration Summary:${NC}"
    echo -e "  ${YELLOW}Pool:${NC} $POOL"
    echo -e "  ${YELLOW}Country:${NC} $COUNTRY"
    echo -e "  ${YELLOW}Wallet:${NC} $WALLET"
    echo -e "  ${YELLOW}Threads:${NC} 50"
    echo -e "  ${YELLOW}Cloud CPU:${NC} Enabled"
    echo
    echo -e "${RED}Press Ctrl+C to stop mining${NC}"
    echo
    
    # Simulate initialization process
    echo -e "${BLUE}Initializing Mining Process...${NC}"
    
    # Start background processes for loading animations
    (
        sleep 2
    ) &
    pid1=$!
    loading_animation $pid1 "Loading mining modules"
    
    (
        sleep 3
    ) &
    pid2=$!
    loading_animation $pid2 "Connecting to $COUNTRY pool"
    
    (
        sleep 2
    ) &
    pid3=$!
    loading_animation $pid3 "Initializing 50 CPU threads"
    
    (
        sleep 3
    ) &
    pid4=$!
    loading_animation $pid4 "Activating cloud CPU resources"
    
    (
        sleep 2
    ) &
    pid5=$!
    loading_animation $pid5 "Starting mining process"
    
    # Wait for all animations to complete
    wait
    
    echo
    echo -e "${GREEN}Miner initialization complete! Starting mining process...${NC}"
    echo
    
    # Start actual mining
    ./miner_config.sh
}

# Function to show status
show_status() {
    show_banner
    echo -e "${CYAN}Current Mining Status:${NC}"
    echo -e "  ${YELLOW}Pool:${NC} $POOL"
    echo -e "  ${YELLOW}Wallet:${NC} $WALLET"
    echo -e "  ${YELLOW}Threads:${NC} 50"
    echo -e "  ${YELLOW}Cloud CPU:${NC} Active"
    echo -e "  ${YELLOW}Status:${NC} Ready"
    echo
    read -p "Press Enter to continue..."
}

# Main program
main() {
    # Check if running as root
    if [[ $EUID -eq 0 ]]; then
        echo -e "${RED}Warning: Running as root is not recommended!${NC}"
        sleep 2
    fi
    
    while true; do
        show_banner
        echo -e "${CYAN}Main Menu:${NC}"
        echo -e "${YELLOW}1. Configure Miner${NC}"
        echo -e "${YELLOW}2. Start Mining${NC}"
        echo -e "${YELLOW}3. Show Status${NC}"
        echo -e "${YELLOW}4. Exit${NC}"
        echo
        
        read -p "Enter your choice (1-4): " main_choice
        
        case $main_choice in
            1)
                select_country
                get_wallet
                configure_miner
                echo -e "${GREEN}Configuration saved successfully!${NC}"
                sleep 2
                ;;
            2)
                if [ ! -f "./miner_config.sh" ]; then
                    echo -e "${RED}Please configure miner first!${NC}"
                    sleep 2
                    continue
                fi
                start_mining
                ;;
            3)
                if [ ! -f "./miner_config.sh" ]; then
                    echo -e "${RED}No configuration found!${NC}"
                    sleep 2
                    continue
                fi
                show_status
                ;;
            4)
                echo -e "${GREEN}Thank you for using Verus Miner!${NC}"
                exit 0
                ;;
            *)
                echo -e "${RED}Invalid choice! Please try again.${NC}"
                sleep 2
                ;;
        esac
    done
}

# Run main function
main "$@"
